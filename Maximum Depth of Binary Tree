/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        int count=1;
        if(root==NULL)
          return 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,count});
        while(!q.empty())
        {
            TreeNode* n=q.front().first;
            int c=q.front().second;
            q.pop();
           // if(n->left!=NULL || n->right!=NULL)
             //  count++;
            if(n->left!=NULL)
            {
               q.push({n->left,c+1});
               count=max(count,c+1);
            }
            if(n->right!=NULL)
            {
               q.push({n->right,c+1});
               count=max(count,c+1);
            }
        }
        return count;
    }
};
